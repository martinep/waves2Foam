#!/bin/bash

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

sh ../../../bin/prepareCase.sh
mv constant/waveProperties constant/waveProperties.input

# Make a clean polyMesh directory
if [ ! -f log.blockMesh ]
then
    if [ -f "constant/polyMesh/boundary" ]
    then
        (cd constant/polyMesh; rm -rf *)
    fi

    cp blockMeshDict.org constant/polyMesh/blockMeshDict
fi

# Create the base blockmesh
runApplication blockMesh

# Make STL-surface / Use backed up STL-surface
# The faceSetToSTL utility will come out on a later point
arg=`which faceSetToSTL`

if [ -n "$arg" ]
then
    runApplication faceSetToSTL
else
    cp constant/triSurface/geometria.stl_backup constant/triSurface/geometria.stl
fi

# Apply snappyHexMesh to create the submerged bar
runApplication snappyHexMesh

if [ -f log.snappyHexMesh ]
then
    # Clear the target polyMesh directory
    (cd constant/polyMesh; rm -rf *);

    # Find the time directories from snappyHexMesh
    timeDir=`grep "Writing mesh to time" log.snappyHexMesh | awk '{print $5}'`
    endTime=`echo $timeDir | tr ' ' '\n' | tail -1`
    
    # Go to the latest outputted time directory
    cd $endTime/polyMesh
    cp boundary* points* owner* faces* neighbour* ../../constant/polyMesh
    cd ../..

    # Clear the time directories created by snappyHexMesh
    for i in $timeDir
    do
        rm -rf $i
    done
fi

# Prepare fields
runApplication setWaveParameters
runApplication setWaveField

# Run tutorial
runApplication waveFoam
